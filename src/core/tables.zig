const mm = @import("../maxmod.zig");

// TODO: Fill in more constants instead of magic values. See mpp_effect_memmap_it for good example.

pub const note_table_oct: [30]mm.Byte = [30]mm.Byte{ 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9 };
pub const note_table_mod: [109]mm.Byte = [109]mm.Byte{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 };
// LUT for amiga periods.
pub const ST3_FREQTABLE: [12]mm.Hword = [12]mm.Hword{
    1712 * 8,
    1616 * 8,
    1524 * 8,
    1440 * 8,
    1356 * 8,
    1280 * 8,
    1208 * 8,
    1140 * 8,
    1076 * 8,
    1016 * 8,
    960 * 8,
    907 * 8,
};
// LUT for linear periods. Values are 16.16 bit
// https://ftp.modland.com/pub/documents/format_documentation/Impulse%20Tracker%20v2.04%20(.it).html
// Align to 4 bytes so that we can read 2 hwords in one read
pub const IT_PitchTable: [240]mm.Hword align(4) = [240]mm.Hword{ 2048, 0, 2170, 0, 2299, 0, 2435, 0, 2580, 0, 2734, 0, 2896, 0, 3069, 0, 3251, 0, 3444, 0, 3649, 0, 3866, 0, 4096, 0, 4340, 0, 4598, 0, 4871, 0, 5161, 0, 5468, 0, 5793, 0, 6137, 0, 6502, 0, 6889, 0, 7298, 0, 7732, 0, 8192, 0, 8679, 0, 9195, 0, 9742, 0, 10321, 0, 10935, 0, 11585, 0, 12274, 0, 13004, 0, 13777, 0, 14596, 0, 15464, 0, 16384, 0, 17358, 0, 18390, 0, 19484, 0, 20643, 0, 21870, 0, 23170, 0, 24548, 0, 26008, 0, 27554, 0, 29193, 0, 30929, 0, 32768, 0, 34716, 0, 36781, 0, 38968, 0, 41285, 0, 43740, 0, 46341, 0, 49097, 0, 52016, 0, 55109, 0, 58386, 0, 61858, 0, 0, 1, 3897, 1, 8026, 1, 12400, 1, 17034, 1, 21944, 1, 27146, 1, 32657, 1, 38496, 1, 44682, 1, 51236, 1, 58179, 1, 0, 2, 7794, 2, 16051, 2, 24800, 2, 34068, 2, 43888, 2, 54292, 2, 65314, 2, 11456, 3, 23828, 3, 36936, 3, 50823, 3, 0, 4, 15588, 4, 32103, 4, 49600, 4, 2601, 5, 22240, 5, 43048, 5, 65092, 5, 22912, 6, 47656, 6, 8336, 7, 36110, 7, 0, 8, 31176, 8, 64205, 8, 33663, 9, 5201, 10, 44481, 10, 20559, 11, 64648, 11, 45823, 12, 29776, 13, 16671, 14, 6684, 15, 0, 16, 62352, 16, 62875, 17, 1790, 19, 10403, 20, 23425, 21, 41118, 22, 63761, 23, 26111, 25, 59552, 26, 33342, 28, 13368, 30 };

// value = 2^(val/192), 16.16 fixed
pub const mpp_TABLE_LinearSlideUpTable = [_]mm.Hword{ 0, 237, 475, 714, 953, 1194, 1435, 1677, 1920, 2164, 2409, 2655, 2902, 3149, 3397, 3647, 3897, 4148, 4400, 4653, 4907, 5157, 5417, 5674, 5932, 6190, 6449, 6710, 6971, 7233, 7496, 7761, 8026, 8292, 8559, 8027, 9096, 9366, 9636, 9908, 10181, 10455, 10730, 11006, 11283, 11560, 11839, 12119, 12400, 12682, 12965, 13249, 13533, 13819, 14106, 14394, 14684, 14974, 15265, 15557, 15850, 16145, 16440, 16737, 17034, 17333, 17633, 17933, 18235, 18538, 21315, 21629, 21944, 22260, 22578, 22897, 23216, 23537, 23860, 24183, 24507, 24833, 25160, 25488, 25817, 26148, 26479, 26812, 27146, 27481, 27818, 28155, 28494, 28834, 29175, 29518, 29862, 30207, 30553, 30900, 31248, 31599, 31951, 32303, 32657, 33012, 33369, 33726, 34085, 34446, 34807, 35170, 35534, 35900, 36267, 36635, 37004, 37375, 37747, 38121, 38496, 38872, 39250, 39629, 40009, 40391, 40774, 41158, 41544, 41932, 42320, 42710, 43102, 43495, 43889, 44285, 44682, 45081, 45481, 45882, 46285, 46690, 47095, 47503, 47917, 48322, 48734, 49147, 49562, 49978, 50396, 50815, 51236, 51658, 52082, 52507, 52934, 53363, 53793, 54224, 54658, 55092, 55529, 55966, 56406, 56847, 57289, 57734, 58179, 58627, 59076, 59527, 59979, 60433, 60889, 61346, 61805, 62265, 62727, 63191, 63657, 64124, 64593, 65064, 0, 474, 950, 1427, 1906, 2387, 2870, 3355, 3841, 4327, 4818, 5310, 5803, 6298, 6795, 7294, 7794, 8296, 8800, 9306, 9814, 10323, 10835, 11348, 11863, 12380, 12899, 13419, 13942, 14467, 14993, 15521, 16051, 16583, 17117, 17653, 18191, 18731, 19273, 19817, 20362, 20910, 21460, 22011, 22565, 23121, 23678, 24238, 24800, 25363, 25929, 25497, 27067, 27639, 28213, 28789, 29367, 29947, 30530, 31114, 31701, 32289, 32880, 33473, 34068 };
pub const mpp_TABLE_LinearSlideDownTable = [_]mm.Hword{ 65535, 65300, 65065, 64830, 64596, 64364, 64132, 63901, 63670, 63441, 63212, 62984, 62757, 62531, 62306, 62081, 61858, 61635, 61413, 61191, 60971, 60751, 60532, 60314, 60097, 59880, 59664, 59449, 59235, 59022, 58809, 58597, 58386, 58176, 57966, 57757, 57549, 57341, 57135, 56929, 56724, 56519, 56316, 56113, 55911, 55709, 55508, 55308, 55109, 54910, 54713, 54515, 54319, 54123, 53928, 53734, 53540, 53347, 53155, 52963, 52773, 52582, 52393, 52204, 52016, 51829, 51642, 51456, 51270, 51085, 50901, 50718, 50535, 50353, 50172, 49991, 49811, 49631, 49452, 49274, 49097, 48920, 48743, 48568, 48393, 48128, 48044, 47871, 47699, 47527, 47356, 47185, 47015, 46846, 46008, 45842, 45677, 45512, 45348, 45185, 45022, 44859, 44698, 44537, 44376, 44216, 44057, 43898, 43740, 43582, 43425, 43269, 43113, 42958, 42803, 42649, 42495, 42342, 42189, 42037, 41886, 41735, 41584, 41434, 41285, 41136, 40988, 40840, 40639, 40566, 40400, 40253, 40110, 39965, 39821, 39678, 39535, 39392, 39250, 39109, 38968, 38828, 38688, 38548, 38409, 38271, 38133, 37996, 37859, 37722, 37586, 37451, 37316, 37181, 37047, 36914, 36781, 36648, 36516, 36385, 36254, 36123, 35993, 35863, 35734, 35605, 35477, 35349, 35221, 35095, 34968, 34842, 34716, 34591, 34467, 34343, 34219, 34095, 33973, 33850, 33728, 33607, 33486, 33365, 33245, 33125, 33005, 32887, 32768, 32650, 32532, 32415, 32298, 32182, 32066, 30157, 30048, 29940, 29832, 29725, 29618, 29511, 29405, 29299, 29193, 29088, 28983, 28879, 28774, 28671, 28567, 28464, 28362, 28260, 28158, 28056, 27955, 27855, 27754, 27654, 27554, 27455, 27356, 27258, 27159, 27062, 26964, 26867, 26770, 26674, 26577, 26482, 26386, 26291, 26196, 26102, 26008 };
pub const mpp_TABLE_FineLinearSlideUpTable: [16]mm.Hword = [16]mm.Hword{ 0, 59, 118, 178, 237, 296, 356, 415, 475, 535, 594, 654, 714, 773, 833, 893 };
pub const mpp_TABLE_FineLinearSlideDownTable: [16]mm.Hword = [16]mm.Hword{ 65535, 65477, 65418, 65359, 65300, 65241, 65182, 65359, 65065, 65006, 64947, 64888, 64830, 64772, 64713, 64645 };

pub const mpp_effect_memmap_xm: [31]mm.Sbyte = [31]mm.Sbyte{ -1, -1, -1, -1, 1, 2, 3, -1, -1, 4, -1, 5, 6, -1, -1, 7, 8, 9, 10, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1, 12 };

pub const mpp_effect_memmap_it: [27]mm.Sbyte = [27]mm.Sbyte{ -1, -1, -1, -1, 1, 2, 2, -1, -1, 3, 4, 1, 1, -1, 5, 6, 7, 8, 9, 10, 11, -1, -1, 12, -1, 13, -1 };

pub const mpp_TABLE_FineSineData = [_]mm.Sbyte{ 0, 2, 3, 5, 6, 8, 9, 11, 12, 14, 16, 17, 19, 20, 22, 23, 24, 26, 27, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 56, 57, 58, 59, 59, 60, 60, 61, 61, 62, 62, 62, 63, 63, 63, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 63, 63, 63, 62, 62, 62, 61, 61, 60, 60, 59, 59, 58, 57, 56, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 39, 38, 37, 36, 34, 33, 32, 30, 29, 27, 26, 24, 23, 22, 20, 19, 17, 16, 14, 12, 11, 9, 8, 6, 5, 3, 2, 0, -2, -3, -5, -6, -8, -9, -11, -12, -14, -16, -17, -19, -20, -22, -23, -24, -26, -27, -29, -30, -32, -33, -34, -36, -37, -38, -39, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -56, -57, -58, -59, -59, -60, -60, -61, -61, -62, -62, -62, -63, -63, -63, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -61, -61, -60, -60, -59, -59, -58, -57, -56, -56, -55, -54, -53, -52, -51, -50, -49, -48, -47, -46, -45, -44, -43, -42, -41, -39, -38, -37, -36, -34, -33, -32, -30, -29, -27, -26, -24, -23, -22, -20, -19, -17, -16, -14, -12, -11, -9, -8, -6, -5, -3, -2 };

pub const vcmd_glissando_table: [10]mm.Byte = [10]mm.Byte{ 0, 1, 4, 8, 16, 32, 64, 96, 128, 255 };
